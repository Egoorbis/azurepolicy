name: 'OIDC and AAD AUth'

on:

  workflow_dispatch:
    inputs:
      destroy:
        type: boolean
        description: Destroy environment?
        required: true
        default: false

  pull_request:
    paths:
      - tf/**
  push:
      branches:
          - main

env:
  tf_actions_working_dir: 'tf'

permissions:
  contents: read
  id-token: write
  
jobs:
  plan:
    name: 'Terraform plan'
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ${{ env.tf_actions_working_dir }}
    env:
        NODE_ENV: tfplan
        TF_LOG: "DEBUG"
        ARM_CLIENT_ID: ${{ secrets.AZURE_CLIENT_ID }}
        ARM_SUBSCRIPTION_ID: ${{ secrets.AZURE_SUBSCRIPTION_ID }}
        ARM_TENANT_ID: ${{ secrets.AZURE_TENANT_ID }}
        BACKEND_RG: ${{ secrets.RESOURCE_GROUP}}
        BACKEND_SG: ${{ secrets.STORAGE_ACCOUNT}}
        BACKEND_CONTAINER: ${{ secrets.CONTAINER_NAME}}
        BACKEND_KEY: ${{ secrets.BACKEND_KEY}}

    steps:

      - name: 'Checkout'
        uses: actions/checkout@v4

      - name: 'Setup Terraform'
        uses: hashicorp/setup-terraform@v3

      - name: Terraform version
        id: version
        run: terraform --version
        
      - name: Terraform env
        id: printenv
        run: printenv

      - name: 'Terraform Init'
        id: init
        run: |
          terraform init \
            -backend-config="resource_group_name=$BACKEND_RG" \
            -backend-config="storage_account_name=$BACKEND_SG" \
            -backend-config="container_name=$BACKEND_CONTAINER" \
            -backend-config="key=$BACKEND_KEY" \
            -reconfigure
      
      - name: Calculate destroy arg
        id: destroy_arg
        run: |
          if [ $DESTROY == "true" ]; then
            echo "::set-output name=val::-destroy" 
          else
            echo "::set-output name=val:: "
          fi
        env:
          DESTROY: ${{ github.event.inputs.destroy }}

      - name: Terraform Plan oidc
        id: plan
        run: |
          terraform plan \
            $DESTROY -no-color -out=out.tfplan

      - name: Upload the plan oidc debug log
        uses: actions/upload-artifact@v3
        with:
          name: tf-debug-plan-oidc-log
          path: "${{ env.tf_actions_working_dir }}/terraform-plan-oidc.log"
        
      - name: Upload the plan
        uses: actions/upload-artifact@v3
        with:
          name: tf-plan-oidc
          path: "${{ env.tf_actions_working_dir }}/out.tfplan"

        
        